"""update admin and user models

Revision ID: 17085f96f61a
Revises: 
Create Date: 2025-09-05 12:02:38.971250

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import sqlite

# revision identifiers, used by Alembic.
revision: str = '17085f96f61a'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('member_payments')
    op.drop_table('activity_joins')
    op.drop_index('ix_centers_id', table_name='centers')
    op.drop_table('centers')
    op.drop_index('ix_notifications_id', table_name='notifications')
    op.drop_table('notifications')
    op.drop_table('activity_likes')
    op.drop_table('members')
    op.drop_table('group_activities')
    op.drop_index('ix_group_events_id', table_name='group_events')
    op.drop_table('group_events')
    op.drop_index('ix_group_post_likes_id', table_name='group_post_likes')
    op.drop_table('group_post_likes')
    op.drop_table('member_invoices')
    op.drop_index('ix_communities_id', table_name='communities')
    op.drop_table('communities')
    op.drop_index('ix_activities_id', table_name='activities')
    op.drop_table('activities')
    op.drop_index('ix_group_members_id', table_name='group_members')
    op.drop_table('group_members')
    op.drop_table('workouts')
    op.drop_table('activity_comments')
    op.drop_index('ix_bookings_id', table_name='bookings')
    op.drop_table('bookings')
    op.drop_index('ix_community_messages_id', table_name='community_messages')
    op.drop_table('community_messages')
    op.drop_index('ix_admins_email', table_name='admins')
    op.drop_index('ix_admins_id', table_name='admins')
    op.drop_table('admins')
    op.drop_index('ix_group_post_comments_id', table_name='group_post_comments')
    op.drop_table('group_post_comments')
    op.drop_index('ix_groups_id', table_name='groups')
    op.drop_table('groups')
    op.drop_index('ix_scan_check_outs_id', table_name='scan_check_outs')
    op.drop_table('scan_check_outs')
    op.drop_index('ix_check_ins_id', table_name='check_ins')
    op.drop_table('check_ins')
    op.drop_table('rewards')
    op.drop_table('user_rewards')
    op.drop_index('ix_reconciliation_line_items_id', table_name='reconciliation_line_items')
    op.drop_table('reconciliation_line_items')
    op.drop_table('community_comments')
    op.drop_index('ix_analytics_events_id', table_name='analytics_events')
    op.drop_table('analytics_events')
    op.drop_index('ix_business_metrics_id', table_name='business_metrics')
    op.drop_table('business_metrics')
    op.drop_index('ix_payments_id', table_name='payments')
    op.drop_table('payments')
    op.drop_index('ix_schedules_id', table_name='schedules')
    op.drop_table('schedules')
    op.drop_index('ix_tokens_id', table_name='tokens')
    op.drop_table('tokens')
    op.drop_index('ix_transactions_id', table_name='transactions')
    op.drop_table('transactions')
    op.drop_table('community_likes')
    op.drop_index('ix_group_posts_id', table_name='group_posts')
    op.drop_table('group_posts')
    op.drop_index('ix_check_outs_id', table_name='check_outs')
    op.drop_table('check_outs')
    op.drop_table('community_members')
    op.drop_index('ix_scan_check_ins_id', table_name='scan_check_ins')
    op.drop_table('scan_check_ins')
    op.drop_index('ix_reconciliations_id', table_name='reconciliations')
    op.drop_table('reconciliations')
    op.drop_index('ix_advertisements_id', table_name='advertisements')
    op.drop_table('advertisements')
    op.add_column('businesses', sa.Column('name', sa.String(length=100), nullable=True))
    op.add_column('businesses', sa.Column('phone_number', sa.String(length=20), nullable=True))
    op.add_column('businesses', sa.Column('updated_at', sa.DateTime(), nullable=True))
    op.add_column('businesses', sa.Column('is_active', sa.Boolean(), nullable=True))
    op.add_column('users', sa.Column('name', sa.String(), nullable=True))
    op.add_column('users', sa.Column('phone_number', sa.String(), nullable=True))
    op.add_column('users', sa.Column('updated_at', sa.DateTime(), nullable=True))
    op.add_column('users', sa.Column('profile_picture', sa.String(), nullable=True))
    op.add_column('users', sa.Column('is_active', sa.Boolean(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('users', 'is_active')
    op.drop_column('users', 'profile_picture')
    op.drop_column('users', 'updated_at')
    op.drop_column('users', 'phone_number')
    op.drop_column('users', 'name')
    op.drop_column('businesses', 'is_active')
    op.drop_column('businesses', 'updated_at')
    op.drop_column('businesses', 'phone_number')
    op.drop_column('businesses', 'name')
    op.create_table('advertisements',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('title', sa.VARCHAR(), nullable=False),
    sa.Column('description', sa.TEXT(), nullable=False),
    sa.Column('image_url', sa.VARCHAR(), nullable=False),
    sa.Column('start_date', sa.DATETIME(), nullable=False),
    sa.Column('end_date', sa.DATETIME(), nullable=False),
    sa.Column('status', sa.VARCHAR(length=9), nullable=True),
    sa.Column('target_type', sa.VARCHAR(length=10), nullable=True),
    sa.Column('target_locations', sqlite.JSON(), nullable=True),
    sa.Column('target_user_groups', sqlite.JSON(), nullable=True),
    sa.Column('clicks', sa.INTEGER(), nullable=True),
    sa.Column('views', sa.INTEGER(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.Column('created_by', sa.INTEGER(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_advertisements_id', 'advertisements', ['id'], unique=False)
    op.create_table('reconciliations',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('business_id', sa.INTEGER(), nullable=False),
    sa.Column('period_start', sa.DATE(), nullable=False),
    sa.Column('period_end', sa.DATE(), nullable=False),
    sa.Column('expected_total', sa.FLOAT(), nullable=False),
    sa.Column('actual_total', sa.FLOAT(), nullable=True),
    sa.Column('variance', sa.FLOAT(), nullable=True),
    sa.Column('status', sa.VARCHAR(length=11), nullable=False),
    sa.Column('notes', sa.TEXT(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.Column('reconciled_by', sa.INTEGER(), nullable=True),
    sa.Column('reconciled_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['business_id'], ['businesses.id'], ),
    sa.ForeignKeyConstraint(['reconciled_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_reconciliations_id', 'reconciliations', ['id'], unique=False)
    op.create_table('scan_check_ins',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('center_id', sa.INTEGER(), nullable=False),
    sa.Column('timestamp', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['center_id'], ['centers.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_scan_check_ins_id', 'scan_check_ins', ['id'], unique=False)
    op.create_table('community_members',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('community_id', sa.INTEGER(), nullable=True),
    sa.Column('user_id', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['community_id'], ['communities.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('check_outs',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('center_id', sa.INTEGER(), nullable=False),
    sa.Column('timestamp', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['center_id'], ['centers.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_check_outs_id', 'check_outs', ['id'], unique=False)
    op.create_table('group_posts',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('group_id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('content', sa.TEXT(), nullable=False),
    sa.Column('post_type', sa.VARCHAR(length=5), nullable=False),
    sa.Column('media_url', sa.VARCHAR(length=500), nullable=True),
    sa.Column('likes_count', sa.INTEGER(), nullable=False),
    sa.Column('comments_count', sa.INTEGER(), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_group_posts_id', 'group_posts', ['id'], unique=False)
    op.create_table('community_likes',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('message_id', sa.INTEGER(), nullable=True),
    sa.Column('user_id', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['message_id'], ['community_messages.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('transactions',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('business_id', sa.INTEGER(), nullable=False),
    sa.Column('payment_id', sa.INTEGER(), nullable=True),
    sa.Column('transaction_type', sa.VARCHAR(length=10), nullable=False),
    sa.Column('amount', sa.FLOAT(), nullable=False),
    sa.Column('currency', sa.VARCHAR(length=10), nullable=False),
    sa.Column('status', sa.VARCHAR(length=9), nullable=False),
    sa.Column('reference', sa.VARCHAR(length=200), nullable=True),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('balance_after', sa.FLOAT(), nullable=True),
    sa.Column('related_transaction_id', sa.INTEGER(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['business_id'], ['businesses.id'], ),
    sa.ForeignKeyConstraint(['payment_id'], ['payments.id'], ),
    sa.ForeignKeyConstraint(['related_transaction_id'], ['transactions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_transactions_id', 'transactions', ['id'], unique=False)
    op.create_table('tokens',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('token', sa.VARCHAR(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=True),
    sa.Column('admin_id', sa.INTEGER(), nullable=True),
    sa.Column('business_id', sa.INTEGER(), nullable=True),
    sa.Column('token_type', sa.VARCHAR(), nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), nullable=True),
    sa.Column('expires_at', sa.DATETIME(), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('last_used', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['admin_id'], ['admins.id'], ),
    sa.ForeignKeyConstraint(['business_id'], ['businesses.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('token')
    )
    op.create_index('ix_tokens_id', 'tokens', ['id'], unique=False)
    op.create_table('schedules',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('business_id', sa.INTEGER(), nullable=False),
    sa.Column('activity_id', sa.INTEGER(), nullable=False),
    sa.Column('title', sa.VARCHAR(length=200), nullable=False),
    sa.Column('description', sa.VARCHAR(length=1000), nullable=True),
    sa.Column('start_time', sa.DATETIME(), nullable=False),
    sa.Column('end_time', sa.DATETIME(), nullable=False),
    sa.Column('capacity', sa.INTEGER(), nullable=False),
    sa.Column('current_bookings', sa.INTEGER(), nullable=False),
    sa.Column('instructor', sa.VARCHAR(length=200), nullable=True),
    sa.Column('location', sa.VARCHAR(length=200), nullable=True),
    sa.Column('price', sa.FLOAT(), nullable=True),
    sa.Column('status', sa.VARCHAR(length=11), nullable=False),
    sa.Column('is_recurring', sa.BOOLEAN(), nullable=False),
    sa.Column('recurrence_type', sa.VARCHAR(length=7), nullable=True),
    sa.Column('recurrence_end_date', sa.DATE(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['activity_id'], ['activities.id'], ),
    sa.ForeignKeyConstraint(['business_id'], ['businesses.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_schedules_id', 'schedules', ['id'], unique=False)
    op.create_table('payments',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('business_id', sa.INTEGER(), nullable=True),
    sa.Column('amount', sa.FLOAT(), nullable=False),
    sa.Column('currency', sa.VARCHAR(), nullable=True),
    sa.Column('payment_type', sa.VARCHAR(length=16), nullable=False),
    sa.Column('status', sa.VARCHAR(length=9), nullable=True),
    sa.Column('transaction_id', sa.VARCHAR(), nullable=True),
    sa.Column('payment_method', sa.VARCHAR(), nullable=True),
    sa.Column('reference', sa.VARCHAR(), nullable=True),
    sa.Column('description', sa.VARCHAR(), nullable=True),
    sa.Column('payment_metadata', sa.VARCHAR(), nullable=True),
    sa.Column('approved_by', sa.INTEGER(), nullable=True),
    sa.Column('approved_at', sa.DATETIME(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['approved_by'], ['admins.id'], ),
    sa.ForeignKeyConstraint(['business_id'], ['businesses.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('transaction_id')
    )
    op.create_index('ix_payments_id', 'payments', ['id'], unique=False)
    op.create_table('business_metrics',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('business_id', sa.INTEGER(), nullable=False),
    sa.Column('date', sa.DATE(), nullable=False),
    sa.Column('total_revenue', sa.FLOAT(), nullable=False),
    sa.Column('total_bookings', sa.INTEGER(), nullable=False),
    sa.Column('unique_users', sa.INTEGER(), nullable=False),
    sa.Column('avg_session_duration', sa.FLOAT(), nullable=False),
    sa.Column('total_check_ins', sa.INTEGER(), nullable=False),
    sa.Column('total_events', sa.INTEGER(), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['business_id'], ['businesses.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_business_metrics_id', 'business_metrics', ['id'], unique=False)
    op.create_table('analytics_events',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('business_id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=True),
    sa.Column('event_type', sa.VARCHAR(length=100), nullable=False),
    sa.Column('event_category', sa.VARCHAR(length=100), nullable=True),
    sa.Column('event_properties', sqlite.JSON(), nullable=True),
    sa.Column('session_id', sa.VARCHAR(length=200), nullable=True),
    sa.Column('device_type', sa.VARCHAR(length=50), nullable=True),
    sa.Column('browser', sa.VARCHAR(length=100), nullable=True),
    sa.Column('os', sa.VARCHAR(length=100), nullable=True),
    sa.Column('ip_address', sa.VARCHAR(length=50), nullable=True),
    sa.Column('country', sa.VARCHAR(length=100), nullable=True),
    sa.Column('city', sa.VARCHAR(length=100), nullable=True),
    sa.Column('event_timestamp', sa.DATETIME(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['business_id'], ['businesses.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_analytics_events_id', 'analytics_events', ['id'], unique=False)
    op.create_table('community_comments',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('message_id', sa.INTEGER(), nullable=True),
    sa.Column('user_id', sa.INTEGER(), nullable=True),
    sa.Column('comment', sa.TEXT(), nullable=False),
    sa.ForeignKeyConstraint(['message_id'], ['community_messages.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('reconciliation_line_items',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('reconciliation_id', sa.INTEGER(), nullable=False),
    sa.Column('payment_id', sa.INTEGER(), nullable=True),
    sa.Column('expected_amount', sa.FLOAT(), nullable=False),
    sa.Column('actual_amount', sa.FLOAT(), nullable=True),
    sa.Column('variance', sa.FLOAT(), nullable=True),
    sa.Column('status', sa.VARCHAR(length=9), nullable=False),
    sa.Column('description', sa.VARCHAR(length=500), nullable=True),
    sa.Column('notes', sa.TEXT(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['payment_id'], ['payments.id'], ),
    sa.ForeignKeyConstraint(['reconciliation_id'], ['reconciliations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_reconciliation_line_items_id', 'reconciliation_line_items', ['id'], unique=False)
    op.create_table('user_rewards',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=True),
    sa.Column('reward_id', sa.INTEGER(), nullable=True),
    sa.Column('claimed', sa.INTEGER(), nullable=True),
    sa.Column('progress', sa.INTEGER(), nullable=True),
    sa.Column('total', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['reward_id'], ['rewards.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('rewards',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(), nullable=False),
    sa.Column('description', sa.VARCHAR(), nullable=False),
    sa.Column('points_required', sa.INTEGER(), nullable=False),
    sa.Column('category', sa.VARCHAR(), nullable=False),
    sa.Column('reward_type', sa.VARCHAR(), nullable=False),
    sa.Column('reward_value', sa.FLOAT(), nullable=False),
    sa.Column('reward_description', sa.VARCHAR(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('check_ins',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('center_id', sa.INTEGER(), nullable=False),
    sa.Column('timestamp', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['center_id'], ['centers.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_check_ins_id', 'check_ins', ['id'], unique=False)
    op.create_table('scan_check_outs',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('center_id', sa.INTEGER(), nullable=False),
    sa.Column('timestamp', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['center_id'], ['centers.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_scan_check_outs_id', 'scan_check_outs', ['id'], unique=False)
    op.create_table('groups',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('business_id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=200), nullable=False),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('category', sa.VARCHAR(length=100), nullable=True),
    sa.Column('is_private', sa.BOOLEAN(), nullable=False),
    sa.Column('max_members', sa.INTEGER(), nullable=True),
    sa.Column('member_count', sa.INTEGER(), nullable=False),
    sa.Column('status', sa.VARCHAR(length=8), nullable=False),
    sa.Column('created_by', sa.INTEGER(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['business_id'], ['businesses.id'], ),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_groups_id', 'groups', ['id'], unique=False)
    op.create_table('group_post_comments',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('post_id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('content', sa.TEXT(), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['post_id'], ['group_posts.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_group_post_comments_id', 'group_post_comments', ['id'], unique=False)
    op.create_table('admins',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('email', sa.VARCHAR(), nullable=True),
    sa.Column('full_name', sa.VARCHAR(), nullable=True),
    sa.Column('hashed_password', sa.VARCHAR(), nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_admins_id', 'admins', ['id'], unique=False)
    op.create_index('ix_admins_email', 'admins', ['email'], unique=False)
    op.create_table('community_messages',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('community_id', sa.INTEGER(), nullable=True),
    sa.Column('center_id', sa.INTEGER(), nullable=True),
    sa.Column('message', sa.TEXT(), nullable=False),
    sa.Column('image', sa.VARCHAR(), nullable=True),
    sa.ForeignKeyConstraint(['center_id'], ['centers.id'], ),
    sa.ForeignKeyConstraint(['community_id'], ['communities.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_community_messages_id', 'community_messages', ['id'], unique=False)
    op.create_table('bookings',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=True),
    sa.Column('center_id', sa.INTEGER(), nullable=True),
    sa.Column('business_id', sa.INTEGER(), nullable=True),
    sa.Column('activity_id', sa.INTEGER(), nullable=True),
    sa.Column('schedule_id', sa.INTEGER(), nullable=True),
    sa.Column('date', sa.DATE(), nullable=False),
    sa.Column('time_slot', sa.VARCHAR(), nullable=False),
    sa.Column('preferences', sqlite.JSON(), nullable=True),
    sa.Column('notes', sa.VARCHAR(), nullable=True),
    sa.Column('status', sa.VARCHAR(), nullable=True),
    sa.Column('rejection_reason', sa.VARCHAR(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.Column('member_id', sa.INTEGER(), nullable=True),
    sa.Column('activity', sa.TEXT(), nullable=True),
    sa.ForeignKeyConstraint(['activity_id'], ['activities.id'], ),
    sa.ForeignKeyConstraint(['business_id'], ['businesses.id'], ),
    sa.ForeignKeyConstraint(['center_id'], ['centers.id'], ),
    sa.ForeignKeyConstraint(['schedule_id'], ['schedules.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_bookings_id', 'bookings', ['id'], unique=False)
    op.create_table('activity_comments',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('activity_id', sa.INTEGER(), nullable=True),
    sa.Column('user_id', sa.INTEGER(), nullable=True),
    sa.Column('comment', sa.TEXT(), nullable=False),
    sa.ForeignKeyConstraint(['activity_id'], ['activities.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('workouts',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=True),
    sa.Column('type', sa.VARCHAR(), nullable=False),
    sa.Column('start_time', sa.DATETIME(), nullable=True),
    sa.Column('duration_minutes', sa.INTEGER(), nullable=True),
    sa.Column('with_friends', sa.BOOLEAN(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('group_members',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('group_id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('role', sa.VARCHAR(length=9), nullable=False),
    sa.Column('status', sa.VARCHAR(length=7), nullable=False),
    sa.Column('joined_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_group_members_id', 'group_members', ['id'], unique=False)
    op.create_table('activities',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('center_id', sa.INTEGER(), nullable=True),
    sa.Column('business_id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(), nullable=False),
    sa.Column('date', sa.DATE(), nullable=False),
    sa.Column('time', sa.VARCHAR(), nullable=False),
    sa.Column('location', sa.VARCHAR(), nullable=False),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('join_count', sa.INTEGER(), nullable=True),
    sa.Column('activity_type', sa.VARCHAR(), nullable=True),
    sa.Column('capacity', sa.INTEGER(), nullable=True),
    sa.Column('duration', sa.INTEGER(), nullable=True),
    sa.Column('instructor', sa.VARCHAR(), nullable=True),
    sa.Column('price', sa.FLOAT(), nullable=True),
    sa.Column('is_active', sa.INTEGER(), server_default=sa.text('1'), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['business_id'], ['businesses.id'], ),
    sa.ForeignKeyConstraint(['center_id'], ['centers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_activities_id', 'activities', ['id'], unique=False)
    op.create_table('communities',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('center_id', sa.INTEGER(), nullable=True),
    sa.Column('name', sa.VARCHAR(), nullable=False),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('category', sa.VARCHAR(), nullable=False),
    sa.Column('image', sa.VARCHAR(), nullable=True),
    sa.Column('members', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['center_id'], ['centers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_communities_id', 'communities', ['id'], unique=False)
    op.create_table('member_invoices',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('member_id', sa.INTEGER(), nullable=True),
    sa.Column('amount', sa.FLOAT(), nullable=False),
    sa.Column('description', sa.VARCHAR(), nullable=True),
    sa.Column('issued_at', sa.DATETIME(), nullable=True),
    sa.Column('due_date', sa.DATETIME(), nullable=True),
    sa.Column('is_paid', sa.BOOLEAN(), nullable=True),
    sa.Column('paid_at', sa.DATETIME(), nullable=True),
    sa.Column('receipt_url', sa.VARCHAR(), nullable=True),
    sa.ForeignKeyConstraint(['member_id'], ['members.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('group_post_likes',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('post_id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['post_id'], ['group_posts.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_group_post_likes_id', 'group_post_likes', ['id'], unique=False)
    op.create_table('group_events',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('group_id', sa.INTEGER(), nullable=False),
    sa.Column('created_by', sa.INTEGER(), nullable=False),
    sa.Column('title', sa.VARCHAR(length=200), nullable=False),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('event_date', sa.DATE(), nullable=False),
    sa.Column('event_time', sa.TIME(), nullable=True),
    sa.Column('location', sa.VARCHAR(length=200), nullable=True),
    sa.Column('max_attendees', sa.INTEGER(), nullable=True),
    sa.Column('attendee_count', sa.INTEGER(), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_group_events_id', 'group_events', ['id'], unique=False)
    op.create_table('group_activities',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=True),
    sa.Column('host_id', sa.INTEGER(), nullable=True),
    sa.Column('activity_id', sa.INTEGER(), nullable=True),
    sa.Column('name', sa.VARCHAR(), nullable=False),
    sa.Column('date', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['activity_id'], ['activities.id'], ),
    sa.ForeignKeyConstraint(['host_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('members',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('business_id', sa.INTEGER(), nullable=True),
    sa.Column('first_name', sa.VARCHAR(), nullable=False),
    sa.Column('last_name', sa.VARCHAR(), nullable=False),
    sa.Column('email', sa.VARCHAR(), nullable=False),
    sa.Column('phone', sa.VARCHAR(), nullable=False),
    sa.Column('date_of_birth', sa.DATE(), nullable=False),
    sa.Column('membership_type', sa.VARCHAR(), nullable=False),
    sa.Column('emergency_contact_name', sa.VARCHAR(), nullable=False),
    sa.Column('emergency_contact_phone', sa.VARCHAR(), nullable=False),
    sa.Column('emergency_contact_relationship', sa.VARCHAR(), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('is_active', sa.INTEGER(), server_default=sa.text('1'), nullable=True),
    sa.Column('payment_status', sa.TEXT(), server_default=sa.text('("unpaid")'), nullable=True),
    sa.Column('membership_status', sa.TEXT(), server_default=sa.text('("active")'), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['business_id'], ['businesses.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('activity_likes',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('activity_id', sa.INTEGER(), nullable=True),
    sa.Column('user_id', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['activity_id'], ['activities.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('notifications',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=True),
    sa.Column('title', sa.VARCHAR(), nullable=True),
    sa.Column('message', sa.VARCHAR(), nullable=True),
    sa.Column('type', sa.VARCHAR(length=12), nullable=True),
    sa.Column('is_read', sa.BOOLEAN(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('link', sa.VARCHAR(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_notifications_id', 'notifications', ['id'], unique=False)
    op.create_table('centers',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(), nullable=True),
    sa.Column('address', sa.VARCHAR(), nullable=True),
    sa.Column('state', sa.VARCHAR(), nullable=True),
    sa.Column('latitude', sa.FLOAT(), nullable=True),
    sa.Column('longitude', sa.FLOAT(), nullable=True),
    sa.Column('center_type', sa.VARCHAR(), nullable=True),
    sa.Column('credit_required', sa.INTEGER(), nullable=True),
    sa.Column('rating', sa.FLOAT(), nullable=True),
    sa.Column('rating_count', sa.INTEGER(), nullable=True),
    sa.Column('comments', sqlite.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_centers_id', 'centers', ['id'], unique=False)
    op.create_table('activity_joins',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('activity_id', sa.INTEGER(), nullable=True),
    sa.Column('user_id', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['activity_id'], ['activities.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('member_payments',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('member_id', sa.INTEGER(), nullable=True),
    sa.Column('amount', sa.FLOAT(), nullable=False),
    sa.Column('paid_at', sa.DATETIME(), nullable=True),
    sa.Column('receipt_url', sa.VARCHAR(), nullable=True),
    sa.Column('payment_method', sa.VARCHAR(), server_default=sa.text('("card")'), nullable=True),
    sa.ForeignKeyConstraint(['member_id'], ['members.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###
